前提：客户端和服务端约定好数据传输用json,返回的json数据格式为：
{"status"{"code":0,msg:"登录成功"},"data":{"username":"xxx","nikename":"xxx"...}}
{"status"{"code":-1,msg:"token过期"},"data":null}
{"status"{"code":-2,msg:"密码错误"},"data":null}

本DEMO处理了公共的错误、支持String和数据bean类型的传入、公共的部分进行抽取、把网络请求和Activity进行绑定，在基类中统一对请求进行取消订阅
进行token的添加、进行请求参数，token，请求url，返回值的打印、。



1、可以在CustomResponseBodyConverter.java中先对数据进行拦截解析，处理公共的错误的部分
2、Retrofit我们都采用Gson处理返回的数据，如果我返回的结果比较简单，比如根据手机号返回一个
验证码{"status"{"code":0,msg:"获取验证码成功"},"data":"8451"}，还是要建立一个Bean类，有点麻烦，
我想不写这个Bean类，在onNext传入的参数可不可以直接是String类型的，我们自己进行处理
3、在基类中统一处理取消订阅。
4、公共的部分进行抽取。(.subscribeOn(Schedulers.io())；.observeOn(AndroidSchedulers.mainThread());)
5、token的添加TokenInterceptor.java
